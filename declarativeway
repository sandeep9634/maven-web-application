pipeline {
agent any

parameters {
  choice choices: ['master', 'development', 'qa'], description: 'select branch name', name: 'BranchName'
}

tools{
maven "Maven3.8.6"
}
triggers {
  pollSCM ('* * * * *')
}
options {
  timestamps()
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '4', daysToKeepStr: '', numToKeepStr: '5')
}

stages {

//get code from github
stage('CheckoutCode'){
steps{
notifyBuild("started")
git credentialsId: '38db5186-845e-41ab-849c-66af359b6f34', url: 'https://github.com/sandeep9634/maven-web-application.git'
}
}

// do the build
stage('Build'){
steps{
sh "mvn clean package"
}
}

//Execute sonarcube report

stage('sonarqubereport'){
steps{
sh "mvn sonar:sonar"
}
}

//upload to nexus
stage('upload to nexus'){
steps{
sh "mvn deploy"
}
}
//deploy to tomcat server
stage('deploy to tomcat server'){
steps{
sshagent(['f4a68dd4-aaa4-4576-8a7b-5f7454508c8a']) {
  sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.0.186:/opt/apache-tomcat-9.0.65/webapps/"
}
}
}
}//stages closing

post {
  success {
    notifyBuild(currentBuild.result)
  }
  failure {
    notifyBuild(currentBuild.result)
  }
}

}//pipeline closing

def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
